services:
  ruuter-public:
    container_name: onboarding-ruuter-public
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8086,http://localhost:3001,http://localhost:3003,http://localhost:3004,http://localhost:8080,http://localhost:8000
      - application.httpCodesAllowList=200,201,202,204,400,401,403,500
      - application.internalRequests.allowedIPs=127.0.0.1
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - application.logging.printStackTrace=true
      - application.internalRequests.disabled=true
      - server.port=8086
    volumes:
      - ./DSL/Ruuter.public:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8075:8086
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.2
    cpus: "0.5"
    mem_limit: "512M"

  data-mapper:
    container_name: onboarding-data-mapper
    image: data-mapper
    environment:
      - PORT=3000
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/DMapper/onboarding/hbs:/workspace/app/views/onboarding
      - ./DSL/DMapper/onboarding/lib:/workspace/app/lib
      - shared-volume:/shared
    ports:
      - 3005:3000
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.4

  resql:
    container_name: onboarding-resql
    image: resql
    depends_on:
      - users_db
    environment:
      - sqlms.datasources.[0].name=byk
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://users_db:5432/onboarding #For LocalDb Use
      # sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk?sslmode=require
      - sqlms.datasources.[0].username=postgres
      - sqlms.datasources.[0].password=rootcode
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8083:8082
    volumes:
      - ./DSL/Resql:/DSL
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.9

  users_db:
    container_name: onboarding-users_db
    image: postgres:14.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=rootcode
      - POSTGRES_DB=onboarding
    ports:
      - 5434:5432
    volumes:
      - ~/buerokratt_onboarding/db_files:/var/lib/postgresql/data

    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.10
    restart: always

  init:
    image: busybox
    command:
      ["sh", "-c", "chmod -R 777 /shared && chmod -R 777 /app/model_trainer"]
    volumes:
      - shared-volume:/shared
      - ./model_trainer:/app/model_trainer
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.12

  cron-manager:
    container_name: onboarding-cron-manager
    image: cron-manager-python
    volumes:
      - ./DSL/CronManager/DSL:/DSL
      - ./DSL/CronManager/script:/app/scripts
      - ./DSL/CronManager/config:/app/config
      - ./model_trainer:/app/model_trainer
      - shared-volume:/shared
    environment:
      - server.port=9010
    ports:
      - 9011:8080
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.11
    depends_on:
      - init
      - s3-ferry
    command: ["sh", "-c", "chmod -R 777 /app/model_trainer"]


  s3-ferry:
    image: s3-ferry:latest
    container_name: onboarding-s3-ferry
    volumes:
      - shared-volume:/shared
    env_file:
      - config.env
    ports:
      - "3009:3000"
    depends_on:
      - init
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.14

  synthetic-data:
    build:
      context: ./synthetic-data-generation
      dockerfile: Dockerfile
    container_name: onboarding-synthetic-data
    environment:
      - POSTGRES_HOST=users_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=onboarding
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=rootcode
    volumes:
      - shared-volume:/shared
    ports:
      - "9000:9000"
    depends_on:
      - init
      - users_db
    networks:
      bykstack-onboarding:
        ipv4_address: 172.26.0.15


volumes:
  shared-volume:
  opensearch-data:

networks:
  bykstack-onboarding:
    name: bykstack-onboarding
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/27
          gateway: 172.26.0.1
